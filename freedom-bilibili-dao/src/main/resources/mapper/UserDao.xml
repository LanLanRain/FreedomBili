<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rainsoul.bilibili.dao.UserDao">
    <!-- 插入新用户信息到t_user表中。使用了自动生成的主键，通过keyProperty属性指定主键id的映射。 -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (phone, email, password, salt, createTime, updateTime)
        values (#{phone}, #{email}, #{password}, #{salt}, #{createTime}, #{updateTime})
    </insert>

    <!-- 插入用户详细信息到t_user_info表中。参数为UserInfo对象，包含了用户的详细属性。 -->
    <insert id="addUserInfo" parameterType="com.rainsoul.bilibili.domain.UserInfo">
        insert into t_user_info(userId, nick, avatar, sign, gender, birth, createTime, updateTime)
        values (#{userId}, #{nick}, #{avatar}, #{sign}, #{gender}, #{birth}, #{createTime}, #{updateTime})
    </insert>

    <!-- 更新用户信息的SQL语句。
         参数说明：
         - parameterType: com.rainsoul.bilibili.domain.UserInfo，表示传入的参数类型为UserInfo实体类。
         更新的字段包括nick（昵称）、avatar（头像）、sign（签名）、gender（性别）、birth（生日）和updateTime（更新时间）。
         具体更新哪些字段取决于传入的UserInfo对象中哪些字段不为空。
    -->
    <update id="updateUserInfo" parameterType="com.rainsoul.bilibili.domain.UserInfo">
        update t_user_info
        <set>
            <!-- 如果nick不为空且不为零长度字符串，则更新nick字段 -->
            <if test="nick != null and nick != '' ">
                nick = #{nick},
            </if>
            <!-- 如果avatar不为空且不为零长度字符串，则更新avatar字段 -->
            <if test="avatar != null and avatar != '' ">
                avatar = #{avatar},
            </if>
            <!-- 如果sign不为空，则更新sign字段 -->
            <if test="sign != null">
                sign = #{sign},
            </if>
            <!-- 如果gender不为空且不为零长度字符串，则更新gender字段 -->
            <if test="gender != null and gender != '' ">
                gender = #{gender},
            </if>
            <!-- 如果birth不为空且不为零长度字符串，则更新birth字段 -->
            <if test="birth != null and birth != '' ">
                birth = #{birth},
            </if>
            <!-- 更新updateTime字段 -->
            updateTime = #{updateTime}
        </set>
    </update>


    <!-- 根据手机号查询用户信息。返回类型为User对象。 -->
    <select id="getUserByPhone" resultType="com.rainsoul.bilibili.domain.User">
        select *
        from t_user
        where phone = #{phone}
    </select>

    <!-- 根据用户id查询用户信息。返回类型为User对象。 -->
    <select id="getUserById" resultType="com.rainsoul.bilibili.domain.User">
        select *
        from t_user
        where id = #{userId}
    </select>

    <!-- 根据用户id查询用户详细信息。返回类型为UserInfo对象。 -->
    <select id="getUserInfoByUserId" resultType="com.rainsoul.bilibili.domain.UserInfo">
        select *
        from t_user_info
        where userId = #{userId}
    </select>

    <!-- 根据用户ID列表获取用户信息列表 -->
    <select id="getUserInfoByUserIds" resultType="com.rainsoul.bilibili.domain.UserInfo">
        select *
        from t_user_info
        where
        1 = 1
        <!-- 如果提供了用户ID列表并且列表非空，则在查询条件中加入用户ID的筛选 -->
        <if test="userIdList != null and userIdList.size > 0">
            and userId in
            <!-- 遍历用户ID列表，生成SQL的in语句部分 -->
            <foreach collection="userIdList" item="userId" index="index" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
    </select>


</mapper>